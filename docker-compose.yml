version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    # build:
    #   context: ./keycloak
    #   dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_IMPORT=/opt/keycloak/realm-config.json # Import realm configuration
    depends_on:
      - keycloak-db
    command:
      - start-dev
      # - start # Use this for production
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/realms/master || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./build/keycloak/realm-config.json:/opt/keycloak/realm-config.json # Mount realm config
      - ./build/keycloak/theme:/opt/keycloak/themes # Mount custom themes

  keycloak-db:
    image: postgres:16.2
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloak
    ports:
      - 5432:5432 # Only expose if you need to access from outside Docker
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  valkey:
    image: valkey/valkey:8.1.0-alpine
    # image: valkey/valkey-server:8.0.1
    ports:
      - 6379:6379
    volumes:
      - valkey-data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: . # Path to your .NET backend's directory
      dockerfile: apps/suggestions-dashboard-backend/Dockerfile # Ensure you have a Dockerfile in your backend directory
    ports:
      - 3001:3001 # Or the port your backend uses
    environment:
      - KEYCLOAK_URL=http://keycloak:8080 # Use service name for inter-container communication
      - KEYCLOAK_REALM=your-realm # Replace with your realm name
      - KEYCLOAK_CLIENT_ID=your-client-id # Replace with your client ID
      - KEYCLOAK_CLIENT_SECRET=your-client-secret # Replace with your client secret (if applicable)
      # Add any other backend-specific environment variables
    depends_on:
      - keycloak
      - valkey # If your backend uses Valkey
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/ || exit 1"] # Adjust the path
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: . # Path to your Vue.js frontend's directory
      dockerfile: apps/suggestions-dashboard-spa/Dockerfile # Ensure you have a Dockerfile in your frontend directory
    ports:
      - 3000:80 # Or the port your frontend uses (e.g., 80 for nginx, 3000 for a React app)
    environment:
      - REACT_APP_KEYCLOAK_URL=http://localhost:8080/ # Use service name
      - REACT_APP_KEYCLOAK_REALM=your-realm # Replace with your realm name
      - REACT_APP_KEYCLOAK_CLIENT_ID=your-client-id # Replace with your client ID
      - API_URL=http://backend:3001 # URL to your backend API
      - WS_URL=ws://backend:3001  # WebSocket URL if applicable
      # Add any other frontend-specific environment variables
    depends_on:
      - keycloak
      - backend #  If your frontend needs to talk to your backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"] #  Correct the port and path
      interval: 30s
      timeout: 10s
      retries: 3
volumes:
  keycloak-db-data:
  valkey-data:
